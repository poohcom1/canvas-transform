function isTransformedContext(ctx){return"zoom"in ctx&&"beginPan"in ctx&&"pan"in ctx&&"endPan"in ctx}function toTransformedContext(ctx){if(isTransformedContext(ctx))return console.warn("[canvas-transform] Canvas is already a transformed canvas!"),ctx;let svg=document.createElementNS("http://www.w3.org/2000/svg","svg"),xform=svg.createSVGMatrix();ctx.getTransform=function(){return xform};const savedTransforms=[];ctx.save=function(){return savedTransforms.push(xform.translate(0,0)),CanvasRenderingContext2D.prototype.save.call(ctx)},ctx.restore=function(){var _a;return xform=null!=(_a=savedTransforms.pop())?_a:svg.createSVGMatrix(),CanvasRenderingContext2D.prototype.restore.call(ctx)},ctx.scale=function(sx,sy){return xform=xform.scale(sx,sy),CanvasRenderingContext2D.prototype.scale.call(ctx,sx,sy)},ctx.rotate=function(radians){return xform=xform.rotate(180*radians/Math.PI),CanvasRenderingContext2D.prototype.rotate.call(ctx,radians)},ctx.translate=function(dx,dy){return xform=xform.translate(dx,dy),CanvasRenderingContext2D.prototype.translate.call(ctx,dx,dy)},ctx.transform=function(a,b,c,d,e,f){let m2=svg.createSVGMatrix();return m2.a=a,m2.b=b,m2.c=c,m2.d=d,m2.e=e,m2.f=f,xform=xform.multiply(m2),CanvasRenderingContext2D.prototype.transform.call(ctx,a,b,c,d,e,f)},ctx.setTransform=function(a,b,c,d,e,f){return"number"==typeof a&&b&&c&&d&&e&&f?(xform.a=a,xform.b=b,xform.c=c,xform.d=d,xform.e=e,xform.f=f,CanvasRenderingContext2D.prototype.setTransform.call(ctx,a,b,c,d,e,f)):"number"!=typeof a?CanvasRenderingContext2D.prototype.setTransform.call(ctx,a):void 0};let pt=svg.createSVGPoint(),lastX=(ctx.transformedPoint=function(x,y){return pt.x=x,pt.y=y,pt.matrixTransform(xform.inverse())},0),lastY=0,dragStart=void 0;ctx.clearCanvas=function(){var p1=this.transformedPoint(0,0),p2=this.transformedPoint(this.canvas.width,this.canvas.height);this.clearRect(p1.x,p1.y,p2.x-p1.x,p2.y-p1.y)},ctx.beginPan=function(e){lastX=e.offsetX||e.pageX-ctx.canvas.offsetLeft,lastY=e.offsetY||e.pageY-ctx.canvas.offsetTop,dragStart=this.transformedPoint(lastX,lastY)},ctx.pan=function(e){lastX=e.offsetX||e.pageX-ctx.canvas.offsetLeft,lastY=e.offsetY||e.pageY-ctx.canvas.offsetTop,dragStart&&(e=this.transformedPoint(lastX,lastY),this.translate(e.x-dragStart.x,e.y-dragStart.y))},ctx.endPan=function(){dragStart=void 0};return ctx.zoom=function(amount,zoomFactor=1.1,center){center=center?this.transformedPoint(center.x,center.y):this.transformedPoint(lastX,lastY),this.translate(center.x,center.y),zoomFactor=Math.pow(zoomFactor,amount);return this.scale(zoomFactor,zoomFactor),this.translate(-center.x,-center.y),0},ctx}class TransformContext{constructor(ctx){this._transform=new DOMMatrix,this._savedTransforms=[],this.panPosition={x:0,y:0},this._zoom=0,this.ctx=ctx}get transform(){return this._transform}save(){this._savedTransforms.push(this._transform),this.ctx.save()}restore(){var _a;this._transform=null!=(_a=this._savedTransforms.pop())?_a:new DOMMatrix,this.ctx.restore()}scale(x,y){this._transform=this._transform.scale(x,y),this.ctx.scale(x,y)}rotate(radians){this._transform=this._transform.rotate(180*radians/Math.PI),this.ctx.rotate(radians)}translate(x,y){this._transform=this._transform.translate(x,y),this.ctx.translate(x,y)}setTransform(a,b,c,d,e,f){this._transform.a=a,this._transform.b=b,this._transform.c=c,this._transform.d=d,this._transform.e=e,this._transform.f=f,this.ctx.setTransform(a,b,c,d,e,f)}mouseToCanvas(e){return{x:e.offsetX||e.pageX-this.ctx.canvas.offsetLeft,y:e.offsetY||e.pageY-this.ctx.canvas.offsetTop}}transformPoint(canvasPoint){const domPoint=new DOMPoint(canvasPoint.x,canvasPoint.y);return domPoint.matrixTransform(this._transform.inverse())}mouseToTransformed(e){return this.transformPoint(this.mouseToCanvas(e))}beginPan(start,transform=!0){this.panStart=transform?this.transformPoint(start):start}movePan(current,transform=!0){this.panPosition=transform?this.transformPoint(current):current,this.panStart&&this.translate(this.panPosition.x-this.panStart.x,this.panPosition.y-this.panStart.y)}endPan(){this.panStart=void 0}beginMousePan(e){this.beginPan(this.mouseToCanvas(e))}moveMousePan(e){this.movePan(this.mouseToCanvas(e))}endMousePan(_e){this.endPan()}get zoom(){return this._zoom}zoomBy(amount,zoomScale=1.1,center,transform=!0){transform=center?transform?this.transformPoint(center):center:this.panPosition,this._zoom+=amount,this.translate(transform.x,transform.y),center=Math.pow(zoomScale,amount);return this.scale(center,center),this.translate(-transform.x,-transform.y),this._zoom}zoomByMouse(e,zoomScale=1.1){var point=this.mouseToCanvas(e);this.zoomBy(-Math.sign(e.deltaY),zoomScale,point,!0)}reset(){this.setTransform(1,0,0,1,0,0)}clearCanvas(){var p1=this.transformPoint({x:0,y:0}),p2=this.transformPoint({x:this.ctx.canvas.width,y:this.ctx.canvas.height});this.ctx.clearRect(p1.x,p1.y,p2.x-p1.x,p2.y-p1.y)}}export{TransformContext,isTransformedContext,toTransformedContext};