function isTransformedContext(t){return"zoom"in t&&"beginPan"in t&&"pan"in t&&"endPan"in t}function toTransformedContext(i){if(isTransformedContext(i))return console.warn("[canvas-transform] Canvas is already a transformed canvas!"),i;let f=document.createElementNS("http://www.w3.org/2000/svg","svg"),c=f.createSVGMatrix();i.getTransform=function(){return c};const t=[];i.save=function(){return t.push(c.translate(0,0)),CanvasRenderingContext2D.prototype.save.call(i)},i.restore=function(){return c=t.pop(),CanvasRenderingContext2D.prototype.restore.call(i)},i.scale=function(t,n){return c=c.scale(t,n),CanvasRenderingContext2D.prototype.scale.call(i,t,n)},i.rotate=function(t){return c=c.rotate(180*t/Math.PI),CanvasRenderingContext2D.prototype.rotate.call(i,t)},i.translate=function(t,n){return c=c.translate(t,n),CanvasRenderingContext2D.prototype.translate.call(i,t,n)},i.transform=function(t,n,e,a,r,o){let s=f.createSVGMatrix();return s.a=t,s.b=n,s.c=e,s.d=a,s.e=r,s.f=o,c=c.multiply(s),CanvasRenderingContext2D.prototype.transform.call(i,t,n,e,a,r,o)},i.setTransform=function(t,n,e,a,r,o){return"number"==typeof t?(c.a=t,c.b=n,c.c=e,c.d=a,c.e=r,c.f=o,CanvasRenderingContext2D.prototype.setTransform.call(i,t,n,e,a,r,o)):CanvasRenderingContext2D.prototype.setTransform.call(i,t)};let e=f.createSVGPoint(),a=(i.transformedPoint=function(t,n){return e.x=t,e.y=n,e.matrixTransform(c.inverse())},0),r=0,n=!1,o=void 0;i.clearCanvas=function(){var t=this.transformedPoint(0,0),n=this.transformedPoint(this.canvas.width,this.canvas.height);this.clearRect(t.x,t.y,n.x-t.x,n.y-t.y)},i.beginPan=function(t){a=t.offsetX||t.pageX-i.canvas.offsetLeft,r=t.offsetY||t.pageY-i.canvas.offsetTop,o=this.transformedPoint(a,r),n=!1},i.pan=function(t){a=t.offsetX||t.pageX-i.canvas.offsetLeft,r=t.offsetY||t.pageY-i.canvas.offsetTop,n=!0,o&&(t=this.transformedPoint(a,r),this.translate(t.x-o.x,t.y-o.y))},i.endPan=function(){o=null};return i.zoom=function(t,n=1.1,e){e=e?this.transform(e.x,e.y):this.transformedPoint(a,r),this.translate(e.x,e.y),n=Math.pow(n,t);return this.scale(n,n),this.translate(-e.x,-e.y),0},i}export{isTransformedContext,toTransformedContext};